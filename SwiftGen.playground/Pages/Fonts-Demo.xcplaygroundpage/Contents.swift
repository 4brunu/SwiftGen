//: #### Other pages
//: * [Demo for `swiftgen strings`](Colors-Demo)
//: * [Demo for `swiftgen images`](Images-Demo)
//: * [Demo for `swiftgen storyboards`](Storyboards-Demo)
//: * [Demo for `swiftgen colors`](Colors-Demo)
//: * Demo for `swiftgen fonts`

import UIKit

//: #### Example of code generated by swiftgen-fonts

// Generated using SwiftGen, by O.Halligon â€” https://github.com/AliSoftware/SwiftGen

import UIKit.UIFont

extension UIFont {
    struct Family {
        enum Helvetica: String {
            case Regular = "Helvetica"
            case Bold = "Helvetica-Bold"
            case Thin = "Helvetica-Thin"
            case Medium = "Helvetica-Medium"

            func font(size: CGFloat) -> UIFont? { return UIFont(name:self.rawValue, size:size)}
        }
        enum HelveticaNeue: String {
            case Regular = "HelveticaNeue"
            case Bold = "HelveticaNeue-Bold"
            case Thin = "HelveticaNeue-Thin"
            case Medium = "HelveticaNeue-Medium"

            func font(size: CGFloat) -> UIFont? { return UIFont(name:self.rawValue, size:size)}
        }
    }
}

//: #### Usage Example
/* Only possible if you used `enumBuilder.build(generateStringInit: true)` to generate the enum */
let helveticaNeueBoldSmall = UIFont.Family.HelveticaNeue.Bold.font(12.0)
let helveticaThinBig = UIFont.Family.Helvetica.Thin.font(90.0)
