import CoreData
import Foundation

// swiftlint:disable superfluous_disable_command
// swiftlint:disable file_length
// swiftlint:disable discouraged_optional_boolean

// swiftlint:disable identifier_name line_length type_body_length
{% set accessModifier %}{% if param.publicAccess %}public{% else %}internal{% endif %}{% endset %}
{% for model in models %}
{% for name, entity in model.entities %}
{% set superclass %}{{ model.entities[entity.superentity].className | default:"NSManagedObject" }}{% endset %}
{% set override %}{% if superclass != "NSManagedObject" %}override {% endif %}{% endset %}
open {{ accessModifier }} class {{ entity.name }}: {{ superclass }} {

    {{ override }}open class func entityName() -> String {
        return "{{ entity.name }}"
    }

    {{ override }}open class func entity(in managedObjectContext: NSManagedObjectContext) -> NSEntityDescription? {
        return NSEntityDescription.entity(forEntityName: self.entityName(), in: managedObjectContext)
    }

    {% for attribute in entity.attributes %}
    @NSManaged open var {{ attribute.name }}: {{ attribute.typeName }}{% if attribute.isOptional %}?{% else %}!{% endif %}

    {% endfor %}
    {% for relationship in entity.relationships %}
    {% if relationship.isToMany %}
    @NSManaged open var {{ relationship.name }}: {% if relationship.isOrdered %}NSOrderedSet{% else %}NSSet{% endif %}

    {% else %}
    @NSManaged open var {{ relationship.name }}: {{ model.entities[relationship.destinationEntity].className | default:"NSManagedObject" }}{% if relationship.isOptional %}?{% endif %}

    {% endif %}
    {% endfor %}
}

{% endfor %}
{% endfor %}
// swiftlint:enable identifier_name line_length type_body_length
